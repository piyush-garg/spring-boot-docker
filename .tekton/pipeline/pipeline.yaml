apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: pipeline-git-clone-build-push-deploy
spec:
  description: |
    this pipeline offers a typical CI/CD process, with a flow including:
    - fetching a git repository as the source
    - using buildah to build a Docker image by Dockerfile
    - pusing the built Docker image to a desired repository
    - deploying it to Kubernetes cluster

  # Parameters
  params:
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: revision
      type: string
      description: The git revision to clone.
    - name: image
      type: string
      description: The image full path to host the built image, with version tag, e.g. "docker.io/koustavs18/nodejs-app:latest"

  # Workspaces
  workspaces:
    - name: workspace
    - name: quay-cred
    - name: maven-settings

  # Taksks
  tasks:

    # 1. Task - fetch-repository
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.revision)
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: output
          workspace: workspace

    # 2. Task - maven build
    - name: maven
      taskRef:
        resolver: hub
        params:
          - name: catalog
            value: tekton-catalog-tasks
          - name: type
            value: artifact
          - name: kind
            value: task
          - name: name
            value: maven
          - name: version
            value: "0.3"
      runAfter:
        - fetch-repository
      params:
        - name: GOALS
          value:
            - -B
            - -DskipTests
            - clean
            - package
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-settings
          workspace: maven-settings

    # 3. Task - buildah build & push
    - name: buildah
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - maven
      params:
        - name: IMAGE
          value: "$(params.image):$(params.revision)"
        - name: TLSVERIFY
          value: "false"
        - name: STORAGE_DRIVER
          value: "vfs"
      workspaces:
        - name: source
          workspace: workspace
        - name: dockerconfig
          workspace: quay-cred

    # 4. Task - kubectl deploy
    - name: deploy
      taskRef:
        resolver: hub
        params:
          - name: catalog
            value: tekton-catalog-tasks
          - name: type
            value: artifact
          - name: kind
            value: task
          - name: name
            value: kubernetes-actions
          - name: version
            value: "0.2"
      runAfter:
        - buildah
      params:
        - name: script
          value: |
            kubectl apply -f k8s/
            echo "----------"
            kubectl patch deployment spring-boot-docker -p '{"spec":{"template":{"spec":{"containers":[{"name":"spring-boot-docker","image":"$(params.image)"}]}}}}'
            kubectl get deployment
      workspaces:
        - name: manifest-dir
          workspace: workspace